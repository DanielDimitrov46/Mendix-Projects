// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mqttconnector.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the MqttConnector module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder bCO_ReloadConnectionDetailBuilder(
		mqttconnector.proxies.ConnectionDetail _connectionDetail
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MqttConnector.BCO_ReloadConnectionDetail");
		builder = builder.withParam("ConnectionDetail", _connectionDetail);
		return builder;
	}

	public static boolean bCO_ReloadConnectionDetail(
		IContext context,
		mqttconnector.proxies.ConnectionDetail _connectionDetail
	)
	{
		Object result = bCO_ReloadConnectionDetailBuilder(
				_connectionDetail
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder connectToBrokerBuilder(
		mqttconnector.proxies.ConnectionDetail _connectionDetail
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MqttConnector.ConnectToBroker");
		builder = builder.withParam("ConnectionDetail", _connectionDetail);
		return builder;
	}

	public static void connectToBroker(
		IContext context,
		mqttconnector.proxies.ConnectionDetail _connectionDetail
	)
	{
		connectToBrokerBuilder(
				_connectionDetail
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder disconnectFromBrokerBuilder(
		mqttconnector.proxies.ConnectionDetail _connectionDetail
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MqttConnector.DisconnectFromBroker");
		builder = builder.withParam("ConnectionDetail", _connectionDetail);
		return builder;
	}

	public static void disconnectFromBroker(
		IContext context,
		mqttconnector.proxies.ConnectionDetail _connectionDetail
	)
	{
		disconnectFromBrokerBuilder(
				_connectionDetail
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_AdvancedSettingsBuilder(
		mqttconnector.proxies.ConnectionDetail _connectionDetail
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MqttConnector.OCH_AdvancedSettings");
		builder = builder.withParam("ConnectionDetail", _connectionDetail);
		return builder;
	}

	public static void oCH_AdvancedSettings(
		IContext context,
		mqttconnector.proxies.ConnectionDetail _connectionDetail
	)
	{
		oCH_AdvancedSettingsBuilder(
				_connectionDetail
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sampleOnMessageMicroflowForSubscribeBuilder(
		java.lang.String _topic,
		java.lang.String _payload
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MqttConnector.SampleOnMessageMicroflowForSubscribe");
		builder = builder.withParam("Topic", _topic);
		builder = builder.withParam("Payload", _payload);
		return builder;
	}

	public static void sampleOnMessageMicroflowForSubscribe(
		IContext context,
		java.lang.String _topic,
		java.lang.String _payload
	)
	{
		sampleOnMessageMicroflowForSubscribeBuilder(
				_topic,
				_payload
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sampleUsageBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MqttConnector.SampleUsage");
		return builder;
	}

	public static void sampleUsage(IContext context)
	{
		sampleUsageBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder saveConnectionDetailsBuilder(
		mqttconnector.proxies.ConnectionDetail _connectionDetail
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MqttConnector.SaveConnectionDetails");
		builder = builder.withParam("ConnectionDetail", _connectionDetail);
		return builder;
	}

	public static mqttconnector.proxies.ConnectionDetail saveConnectionDetails(
		IContext context,
		mqttconnector.proxies.ConnectionDetail _connectionDetail
	)
	{
		Object result = saveConnectionDetailsBuilder(
				_connectionDetail
			)
			.execute(context);
		return result == null ? null : mqttconnector.proxies.ConnectionDetail.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_PasswordEncryptionBuilder(
		mqttconnector.proxies.ConnectionDetail _connectionDetail
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MqttConnector.SUB_PasswordEncryption");
		builder = builder.withParam("ConnectionDetail", _connectionDetail);
		return builder;
	}

	public static void sUB_PasswordEncryption(
		IContext context,
		mqttconnector.proxies.ConnectionDetail _connectionDetail
	)
	{
		sUB_PasswordEncryptionBuilder(
				_connectionDetail
			)
			.execute(context);
	}
}
