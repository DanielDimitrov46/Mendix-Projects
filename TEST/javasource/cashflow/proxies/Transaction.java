// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package cashflow.proxies;

public class Transaction
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject transactionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "CashFlow.Transaction";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Description("Description"),
		Amount("Amount"),
		TransactionType("TransactionType"),
		Transaction_Category("CashFlow.Transaction_Category");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Transaction(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Transaction(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject transactionMendixObject)
	{
		if (transactionMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, transactionMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.transactionMendixObject = transactionMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Transaction.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static cashflow.proxies.Transaction initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return cashflow.proxies.Transaction.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static cashflow.proxies.Transaction initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new cashflow.proxies.Transaction(context, mendixObject);
	}

	public static cashflow.proxies.Transaction load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return cashflow.proxies.Transaction.initialize(context, mendixObject);
	}

	public static java.util.List<cashflow.proxies.Transaction> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> cashflow.proxies.Transaction.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Description
	 */
	public final java.lang.String getDescription()
	{
		return getDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of Description
	 */
	public final java.lang.String getDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Description.toString());
	}

	/**
	 * Set value of Description
	 * @param description
	 */
	public final void setDescription(java.lang.String description)
	{
		setDescription(getContext(), description);
	}

	/**
	 * Set value of Description
	 * @param context
	 * @param description
	 */
	public final void setDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String description)
	{
		getMendixObject().setValue(context, MemberNames.Description.toString(), description);
	}

	/**
	 * @return value of Amount
	 */
	public final java.math.BigDecimal getAmount()
	{
		return getAmount(getContext());
	}

	/**
	 * @param context
	 * @return value of Amount
	 */
	public final java.math.BigDecimal getAmount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.Amount.toString());
	}

	/**
	 * Set value of Amount
	 * @param amount
	 */
	public final void setAmount(java.math.BigDecimal amount)
	{
		setAmount(getContext(), amount);
	}

	/**
	 * Set value of Amount
	 * @param context
	 * @param amount
	 */
	public final void setAmount(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal amount)
	{
		getMendixObject().setValue(context, MemberNames.Amount.toString(), amount);
	}

	/**
	 * Set value of TransactionType
	 * @param transactiontype
	 */
	public final cashflow.proxies.ENUM_TransactionType getTransactionType()
	{
		return getTransactionType(getContext());
	}

	/**
	 * @param context
	 * @return value of TransactionType
	 */
	public final cashflow.proxies.ENUM_TransactionType getTransactionType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.TransactionType.toString());
		if (obj == null) {
			return null;
		}
		return cashflow.proxies.ENUM_TransactionType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of TransactionType
	 * @param transactiontype
	 */
	public final void setTransactionType(cashflow.proxies.ENUM_TransactionType transactiontype)
	{
		setTransactionType(getContext(), transactiontype);
	}

	/**
	 * Set value of TransactionType
	 * @param context
	 * @param transactiontype
	 */
	public final void setTransactionType(com.mendix.systemwideinterfaces.core.IContext context, cashflow.proxies.ENUM_TransactionType transactiontype)
	{
		if (transactiontype != null) {
			getMendixObject().setValue(context, MemberNames.TransactionType.toString(), transactiontype.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.TransactionType.toString(), null);
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Transaction_Category
	 */
	public final cashflow.proxies.Category getTransaction_Category() throws com.mendix.core.CoreException
	{
		return getTransaction_Category(getContext());
	}

	/**
	 * @param context
	 * @return value of Transaction_Category
	 * @throws com.mendix.core.CoreException
	 */
	public final cashflow.proxies.Category getTransaction_Category(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		cashflow.proxies.Category result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Transaction_Category.toString());
		if (identifier != null) {
			result = cashflow.proxies.Category.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Transaction_Category
	 * @param transaction_category
	 */
	public final void setTransaction_Category(cashflow.proxies.Category transaction_category)
	{
		setTransaction_Category(getContext(), transaction_category);
	}

	/**
	 * Set value of Transaction_Category
	 * @param context
	 * @param transaction_category
	 */
	public final void setTransaction_Category(com.mendix.systemwideinterfaces.core.IContext context, cashflow.proxies.Category transaction_category)
	{
		if (transaction_category == null) {
			getMendixObject().setValue(context, MemberNames.Transaction_Category.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Transaction_Category.toString(), transaction_category.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return transactionMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final cashflow.proxies.Transaction that = (cashflow.proxies.Transaction) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
