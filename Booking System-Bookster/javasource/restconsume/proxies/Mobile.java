// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package restconsume.proxies;

public class Mobile implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject mobileMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "RESTConsume.Mobile";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Page("Page"),
		Revisions("Revisions"),
		Edit("Edit"),
		Talk("Talk"),
		Mobile_Content_urls("RESTConsume.Mobile_Content_urls");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Mobile(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Mobile(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mobileMendixObject)
	{
		if (mobileMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, mobileMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.mobileMendixObject = mobileMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static restconsume.proxies.Mobile initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new restconsume.proxies.Mobile(context, mendixObject);
	}

	public static restconsume.proxies.Mobile load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return restconsume.proxies.Mobile.initialize(context, mendixObject);
	}

	/**
	 * @return value of Page
	 */
	public final java.lang.String getPage()
	{
		return getPage(getContext());
	}

	/**
	 * @param context
	 * @return value of Page
	 */
	public final java.lang.String getPage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Page.toString());
	}

	/**
	 * Set value of Page
	 * @param page
	 */
	public final void setPage(java.lang.String page)
	{
		setPage(getContext(), page);
	}

	/**
	 * Set value of Page
	 * @param context
	 * @param page
	 */
	public final void setPage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String page)
	{
		getMendixObject().setValue(context, MemberNames.Page.toString(), page);
	}

	/**
	 * @return value of Revisions
	 */
	public final java.lang.String getRevisions()
	{
		return getRevisions(getContext());
	}

	/**
	 * @param context
	 * @return value of Revisions
	 */
	public final java.lang.String getRevisions(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Revisions.toString());
	}

	/**
	 * Set value of Revisions
	 * @param revisions
	 */
	public final void setRevisions(java.lang.String revisions)
	{
		setRevisions(getContext(), revisions);
	}

	/**
	 * Set value of Revisions
	 * @param context
	 * @param revisions
	 */
	public final void setRevisions(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String revisions)
	{
		getMendixObject().setValue(context, MemberNames.Revisions.toString(), revisions);
	}

	/**
	 * @return value of Edit
	 */
	public final java.lang.String getEdit()
	{
		return getEdit(getContext());
	}

	/**
	 * @param context
	 * @return value of Edit
	 */
	public final java.lang.String getEdit(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Edit.toString());
	}

	/**
	 * Set value of Edit
	 * @param edit
	 */
	public final void setEdit(java.lang.String edit)
	{
		setEdit(getContext(), edit);
	}

	/**
	 * Set value of Edit
	 * @param context
	 * @param edit
	 */
	public final void setEdit(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String edit)
	{
		getMendixObject().setValue(context, MemberNames.Edit.toString(), edit);
	}

	/**
	 * @return value of Talk
	 */
	public final java.lang.String getTalk()
	{
		return getTalk(getContext());
	}

	/**
	 * @param context
	 * @return value of Talk
	 */
	public final java.lang.String getTalk(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Talk.toString());
	}

	/**
	 * Set value of Talk
	 * @param talk
	 */
	public final void setTalk(java.lang.String talk)
	{
		setTalk(getContext(), talk);
	}

	/**
	 * Set value of Talk
	 * @param context
	 * @param talk
	 */
	public final void setTalk(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String talk)
	{
		getMendixObject().setValue(context, MemberNames.Talk.toString(), talk);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Mobile_Content_urls
	 */
	public final restconsume.proxies.Content_urls getMobile_Content_urls() throws com.mendix.core.CoreException
	{
		return getMobile_Content_urls(getContext());
	}

	/**
	 * @param context
	 * @return value of Mobile_Content_urls
	 * @throws com.mendix.core.CoreException
	 */
	public final restconsume.proxies.Content_urls getMobile_Content_urls(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		restconsume.proxies.Content_urls result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Mobile_Content_urls.toString());
		if (identifier != null) {
			result = restconsume.proxies.Content_urls.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Mobile_Content_urls
	 * @param mobile_content_urls
	 */
	public final void setMobile_Content_urls(restconsume.proxies.Content_urls mobile_content_urls)
	{
		setMobile_Content_urls(getContext(), mobile_content_urls);
	}

	/**
	 * Set value of Mobile_Content_urls
	 * @param context
	 * @param mobile_content_urls
	 */
	public final void setMobile_Content_urls(com.mendix.systemwideinterfaces.core.IContext context, restconsume.proxies.Content_urls mobile_content_urls)
	{
		if (mobile_content_urls == null) {
			getMendixObject().setValue(context, MemberNames.Mobile_Content_urls.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Mobile_Content_urls.toString(), mobile_content_urls.getMendixObject().getId());
		}
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return mobileMendixObject;
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final restconsume.proxies.Mobile that = (restconsume.proxies.Mobile) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
