// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package calendarevents.proxies;

public class Calendar implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject calendarMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "CalendarEvents.Calendar";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Title("Title"),
		Start("Start"),
		End("End"),
		AllDay("AllDay"),
		Color("Color"),
		Calendar_Booking("CalendarEvents.Calendar_Booking");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Calendar(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Calendar(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject calendarMendixObject)
	{
		if (calendarMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, calendarMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.calendarMendixObject = calendarMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static calendarevents.proxies.Calendar initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new calendarevents.proxies.Calendar(context, mendixObject);
	}

	public static calendarevents.proxies.Calendar load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return calendarevents.proxies.Calendar.initialize(context, mendixObject);
	}

	public static java.util.List<calendarevents.proxies.Calendar> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> calendarevents.proxies.Calendar.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of Title
	 */
	public final java.lang.String getTitle()
	{
		return getTitle(getContext());
	}

	/**
	 * @param context
	 * @return value of Title
	 */
	public final java.lang.String getTitle(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Title.toString());
	}

	/**
	 * Set value of Title
	 * @param title
	 */
	public final void setTitle(java.lang.String title)
	{
		setTitle(getContext(), title);
	}

	/**
	 * Set value of Title
	 * @param context
	 * @param title
	 */
	public final void setTitle(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String title)
	{
		getMendixObject().setValue(context, MemberNames.Title.toString(), title);
	}

	/**
	 * @return value of Start
	 */
	public final java.util.Date getStart()
	{
		return getStart(getContext());
	}

	/**
	 * @param context
	 * @return value of Start
	 */
	public final java.util.Date getStart(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Start.toString());
	}

	/**
	 * Set value of Start
	 * @param start
	 */
	public final void setStart(java.util.Date start)
	{
		setStart(getContext(), start);
	}

	/**
	 * Set value of Start
	 * @param context
	 * @param start
	 */
	public final void setStart(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date start)
	{
		getMendixObject().setValue(context, MemberNames.Start.toString(), start);
	}

	/**
	 * @return value of End
	 */
	public final java.util.Date getEnd()
	{
		return getEnd(getContext());
	}

	/**
	 * @param context
	 * @return value of End
	 */
	public final java.util.Date getEnd(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.End.toString());
	}

	/**
	 * Set value of End
	 * @param end
	 */
	public final void setEnd(java.util.Date end)
	{
		setEnd(getContext(), end);
	}

	/**
	 * Set value of End
	 * @param context
	 * @param end
	 */
	public final void setEnd(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date end)
	{
		getMendixObject().setValue(context, MemberNames.End.toString(), end);
	}

	/**
	 * @return value of AllDay
	 */
	public final java.lang.Boolean getAllDay()
	{
		return getAllDay(getContext());
	}

	/**
	 * @param context
	 * @return value of AllDay
	 */
	public final java.lang.Boolean getAllDay(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.AllDay.toString());
	}

	/**
	 * Set value of AllDay
	 * @param allday
	 */
	public final void setAllDay(java.lang.Boolean allday)
	{
		setAllDay(getContext(), allday);
	}

	/**
	 * Set value of AllDay
	 * @param context
	 * @param allday
	 */
	public final void setAllDay(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean allday)
	{
		getMendixObject().setValue(context, MemberNames.AllDay.toString(), allday);
	}

	/**
	 * @return value of Color
	 */
	public final java.lang.String getColor()
	{
		return getColor(getContext());
	}

	/**
	 * @param context
	 * @return value of Color
	 */
	public final java.lang.String getColor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Color.toString());
	}

	/**
	 * Set value of Color
	 * @param color
	 */
	public final void setColor(java.lang.String color)
	{
		setColor(getContext(), color);
	}

	/**
	 * Set value of Color
	 * @param context
	 * @param color
	 */
	public final void setColor(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String color)
	{
		getMendixObject().setValue(context, MemberNames.Color.toString(), color);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Calendar_Booking
	 */
	public final calendarevents.proxies.Booking getCalendar_Booking() throws com.mendix.core.CoreException
	{
		return getCalendar_Booking(getContext());
	}

	/**
	 * @param context
	 * @return value of Calendar_Booking
	 * @throws com.mendix.core.CoreException
	 */
	public final calendarevents.proxies.Booking getCalendar_Booking(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		calendarevents.proxies.Booking result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Calendar_Booking.toString());
		if (identifier != null) {
			result = calendarevents.proxies.Booking.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Calendar_Booking
	 * @param calendar_booking
	 */
	public final void setCalendar_Booking(calendarevents.proxies.Booking calendar_booking)
	{
		setCalendar_Booking(getContext(), calendar_booking);
	}

	/**
	 * Set value of Calendar_Booking
	 * @param context
	 * @param calendar_booking
	 */
	public final void setCalendar_Booking(com.mendix.systemwideinterfaces.core.IContext context, calendarevents.proxies.Booking calendar_booking)
	{
		if (calendar_booking == null) {
			getMendixObject().setValue(context, MemberNames.Calendar_Booking.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Calendar_Booking.toString(), calendar_booking.getMendixObject().getId());
		}
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return calendarMendixObject;
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final calendarevents.proxies.Calendar that = (calendarevents.proxies.Calendar) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
