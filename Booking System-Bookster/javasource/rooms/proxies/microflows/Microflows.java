// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package rooms.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the Rooms module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Equipment_SaveBuilder(
		rooms.proxies.Equipment _equipment,
		rooms.proxies.Room _room
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Rooms.ACT_Equipment_Save");
		builder = builder.withParam("Equipment", _equipment);
		builder = builder.withParam("Room", _room);
		return builder;
	}

	public static void aCT_Equipment_Save(
		IContext context,
		rooms.proxies.Equipment _equipment,
		rooms.proxies.Room _room
	)
	{
		aCT_Equipment_SaveBuilder(
				_equipment,
				_room
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Room_CreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Rooms.ACT_Room_Create");
		return builder;
	}

	public static void aCT_Room_Create(IContext context)
	{
		aCT_Room_CreateBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Booking_EventsBuilder(
		rooms.proxies.Room _room
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Rooms.DS_Booking_Events");
		builder = builder.withParam("Room", _room);
		return builder;
	}

	public static java.util.List<calendarevents.proxies.Booking> dS_Booking_Events(
		IContext context,
		rooms.proxies.Room _room
	)
	{
		Object result = dS_Booking_EventsBuilder(
				_room
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> calendarevents.proxies.Booking.initialize(context, obj));
	}
}
