// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package main.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the Main module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_GetUserBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Main.ACT_GetUser");
		return builder;
	}

	public static usermanagement.proxies.User aCT_GetUser(IContext context)
	{
		Object result = aCT_GetUserBuilder().execute(context);
		return result == null ? null : usermanagement.proxies.User.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Notification_RetrieveBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Main.DS_Notification_Retrieve");
		return builder;
	}

	public static notification.proxies.Notification dS_Notification_Retrieve(IContext context)
	{
		Object result = dS_Notification_RetrieveBuilder().execute(context);
		return result == null ? null : notification.proxies.Notification.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCh_Microflow_ChangeToFalseBuilder(
		notification.proxies.Notification _notification
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Main.OCh_Microflow_ChangeToFalse");
		builder = builder.withParam("Notification", _notification);
		return builder;
	}

	public static void oCh_Microflow_ChangeToFalse(
		IContext context,
		notification.proxies.Notification _notification
	)
	{
		oCh_Microflow_ChangeToFalseBuilder(
				_notification
			)
			.execute(context);
	}
}
