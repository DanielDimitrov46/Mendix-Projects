// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class Truck extends myfirstmodule.proxies.Vehicle
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.Truck";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		NumberOfAxis("NumberOfAxis"),
		Manufacturer("Manufacturer"),
		Model("Model"),
		Year("Year"),
		Color("Color"),
		Horsepower("Horsepower"),
		Mileage("Mileage"),
		Price("Price"),
		Ad_Vehicle("MyFirstModule.Ad_Vehicle");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Truck(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Truck(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject truckMendixObject)
	{
		super(context, truckMendixObject);
		if (!com.mendix.core.Core.isSubClassOf(entityName, truckMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static myfirstmodule.proxies.Truck initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.Truck(context, mendixObject);
	}

	public static myfirstmodule.proxies.Truck load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.Truck.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.Truck> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> myfirstmodule.proxies.Truck.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of NumberOfAxis
	 */
	public final java.lang.Integer getNumberOfAxis()
	{
		return getNumberOfAxis(getContext());
	}

	/**
	 * @param context
	 * @return value of NumberOfAxis
	 */
	public final java.lang.Integer getNumberOfAxis(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.NumberOfAxis.toString());
	}

	/**
	 * Set value of NumberOfAxis
	 * @param numberofaxis
	 */
	public final void setNumberOfAxis(java.lang.Integer numberofaxis)
	{
		setNumberOfAxis(getContext(), numberofaxis);
	}

	/**
	 * Set value of NumberOfAxis
	 * @param context
	 * @param numberofaxis
	 */
	public final void setNumberOfAxis(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer numberofaxis)
	{
		getMendixObject().setValue(context, MemberNames.NumberOfAxis.toString(), numberofaxis);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.Truck that = (myfirstmodule.proxies.Truck) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
