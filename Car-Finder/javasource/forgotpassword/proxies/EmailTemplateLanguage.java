// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package forgotpassword.proxies;

public class EmailTemplateLanguage implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject emailTemplateLanguageMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "ForgotPassword.EmailTemplateLanguage";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		EmailTemplateLanguage_EmailTemplate("ForgotPassword.EmailTemplateLanguage_EmailTemplate"),
		EmailTemplateLanguage_Language("ForgotPassword.EmailTemplateLanguage_Language");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public EmailTemplateLanguage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected EmailTemplateLanguage(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject emailTemplateLanguageMendixObject)
	{
		if (emailTemplateLanguageMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, emailTemplateLanguageMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.emailTemplateLanguageMendixObject = emailTemplateLanguageMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static forgotpassword.proxies.EmailTemplateLanguage initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new forgotpassword.proxies.EmailTemplateLanguage(context, mendixObject);
	}

	public static forgotpassword.proxies.EmailTemplateLanguage load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return forgotpassword.proxies.EmailTemplateLanguage.initialize(context, mendixObject);
	}

	public static java.util.List<forgotpassword.proxies.EmailTemplateLanguage> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> forgotpassword.proxies.EmailTemplateLanguage.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of EmailTemplateLanguage_EmailTemplate
	 */
	public final email_connector.proxies.EmailTemplate getEmailTemplateLanguage_EmailTemplate() throws com.mendix.core.CoreException
	{
		return getEmailTemplateLanguage_EmailTemplate(getContext());
	}

	/**
	 * @param context
	 * @return value of EmailTemplateLanguage_EmailTemplate
	 * @throws com.mendix.core.CoreException
	 */
	public final email_connector.proxies.EmailTemplate getEmailTemplateLanguage_EmailTemplate(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		email_connector.proxies.EmailTemplate result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.EmailTemplateLanguage_EmailTemplate.toString());
		if (identifier != null) {
			result = email_connector.proxies.EmailTemplate.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of EmailTemplateLanguage_EmailTemplate
	 * @param emailtemplatelanguage_emailtemplate
	 */
	public final void setEmailTemplateLanguage_EmailTemplate(email_connector.proxies.EmailTemplate emailtemplatelanguage_emailtemplate)
	{
		setEmailTemplateLanguage_EmailTemplate(getContext(), emailtemplatelanguage_emailtemplate);
	}

	/**
	 * Set value of EmailTemplateLanguage_EmailTemplate
	 * @param context
	 * @param emailtemplatelanguage_emailtemplate
	 */
	public final void setEmailTemplateLanguage_EmailTemplate(com.mendix.systemwideinterfaces.core.IContext context, email_connector.proxies.EmailTemplate emailtemplatelanguage_emailtemplate)
	{
		if (emailtemplatelanguage_emailtemplate == null) {
			getMendixObject().setValue(context, MemberNames.EmailTemplateLanguage_EmailTemplate.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.EmailTemplateLanguage_EmailTemplate.toString(), emailtemplatelanguage_emailtemplate.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of EmailTemplateLanguage_Language
	 */
	public final system.proxies.Language getEmailTemplateLanguage_Language() throws com.mendix.core.CoreException
	{
		return getEmailTemplateLanguage_Language(getContext());
	}

	/**
	 * @param context
	 * @return value of EmailTemplateLanguage_Language
	 * @throws com.mendix.core.CoreException
	 */
	public final system.proxies.Language getEmailTemplateLanguage_Language(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.Language result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.EmailTemplateLanguage_Language.toString());
		if (identifier != null) {
			result = system.proxies.Language.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of EmailTemplateLanguage_Language
	 * @param emailtemplatelanguage_language
	 */
	public final void setEmailTemplateLanguage_Language(system.proxies.Language emailtemplatelanguage_language)
	{
		setEmailTemplateLanguage_Language(getContext(), emailtemplatelanguage_language);
	}

	/**
	 * Set value of EmailTemplateLanguage_Language
	 * @param context
	 * @param emailtemplatelanguage_language
	 */
	public final void setEmailTemplateLanguage_Language(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.Language emailtemplatelanguage_language)
	{
		if (emailtemplatelanguage_language == null) {
			getMendixObject().setValue(context, MemberNames.EmailTemplateLanguage_Language.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.EmailTemplateLanguage_Language.toString(), emailtemplatelanguage_language.getMendixObject().getId());
		}
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return emailTemplateLanguageMendixObject;
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final forgotpassword.proxies.EmailTemplateLanguage that = (forgotpassword.proxies.EmailTemplateLanguage) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
